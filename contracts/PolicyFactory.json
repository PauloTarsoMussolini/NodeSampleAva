{
  "contractName": "PolicyFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AdminRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MutualAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MutualRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "instancecAddress",
          "type": "address"
        }
      ],
      "name": "PolicyGenerated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addMutual",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admins",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isMutual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mutuals",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeMutual",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "wallets",
                  "type": "address[]"
                }
              ],
              "internalType": "struct MutualModel.Mutual",
              "name": "mutual",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "prizeAmount",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "fipePercentage",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "app",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "glasses",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "rcfMaterials",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "rcfBodily",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "reserveCar",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "franchise",
                  "type": "string"
                },
                {
                  "internalType": "string[]",
                  "name": "productCoverage",
                  "type": "string[]"
                }
              ],
              "internalType": "struct CoverageModel.Coverage",
              "name": "coverage",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "proposal",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "apolice",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "startValidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endValidity",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "apoliceStatus",
                  "type": "string"
                }
              ],
              "internalType": "struct PolicyInformationModel.PolicyInformation",
              "name": "policyInformation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "nameComplete",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dateOfBirth",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "maritalStatus",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "pocket",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cnpjCpf",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "gender",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "relationshipPolicyHolder",
                  "type": "string"
                }
              ],
              "internalType": "struct PolicyHolderDataModel.PolicyHolderData",
              "name": "policyHoldedrData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "typeParam",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "marker",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "model",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "numerSlides",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "yearManufacture",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "yearModel",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "licensePlate",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "chassis",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "renavam",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "fuel",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "newVehicle",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "vehicleFinaced",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "color",
                  "type": "string"
                }
              ],
              "internalType": "struct VehicleDataModel.VehicleData",
              "name": "vehicleData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "nameComplete",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dateOfBirth",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "maritalStatus",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "pocket",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cpfCnpj",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "gender",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "profession",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "cnh",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dateFirstCnh",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "garage",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "usesWork",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "vehicleUse",
                  "type": "string"
                }
              ],
              "internalType": "struct DriverDataModel.DriverData",
              "name": "driverData",
              "type": "tuple"
            }
          ],
          "internalType": "struct PolicyModel.PolicyModelStruct",
          "name": "policyModel",
          "type": "tuple"
        }
      ],
      "name": "generatePolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multualAddress",
          "type": "address"
        }
      ],
      "name": "consultMutualPolicies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "policyAddress",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "ownerAddress",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AdminRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MutualAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MutualRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"instancecAddress\",\"type\":\"address\"}],\"name\":\"PolicyGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addMutual\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multualAddress\",\"type\":\"address\"}],\"name\":\"consultMutualPolicies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"policyAddress\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"ownerAddress\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"wallets\",\"type\":\"address[]\"}],\"internalType\":\"struct MutualModel.Mutual\",\"name\":\"mutual\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"prizeAmount\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fipePercentage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"app\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"glasses\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rcfMaterials\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rcfBodily\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reserveCar\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"franchise\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"productCoverage\",\"type\":\"string[]\"}],\"internalType\":\"struct CoverageModel.Coverage\",\"name\":\"coverage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"proposal\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"apolice\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startValidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endValidity\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"apoliceStatus\",\"type\":\"string\"}],\"internalType\":\"struct PolicyInformationModel.PolicyInformation\",\"name\":\"policyInformation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"nameComplete\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"maritalStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pocket\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cnpjCpf\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"relationshipPolicyHolder\",\"type\":\"string\"}],\"internalType\":\"struct PolicyHolderDataModel.PolicyHolderData\",\"name\":\"policyHoldedrData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"typeParam\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"marker\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"model\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"numerSlides\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"yearManufacture\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"yearModel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"licensePlate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"chassis\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"renavam\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"fuel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"newVehicle\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleFinaced\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"}],\"internalType\":\"struct VehicleDataModel.VehicleData\",\"name\":\"vehicleData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"nameComplete\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"maritalStatus\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pocket\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cpfCnpj\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"profession\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cnh\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateFirstCnh\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"garage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"usesWork\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vehicleUse\",\"type\":\"string\"}],\"internalType\":\"struct DriverDataModel.DriverData\",\"name\":\"driverData\",\"type\":\"tuple\"}],\"internalType\":\"struct PolicyModel.PolicyModelStruct\",\"name\":\"policyModel\",\"type\":\"tuple\"}],\"name\":\"generatePolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isMutual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mutuals\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeMutual\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/PolicyFactory.sol\":\"PolicyFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1500},\"remappings\":[]},\"sources\":{\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/AbstractFactory.sol\":{\"keccak256\":\"0x9a9123e6c3dbcfed09c9072f39169f1dd5ea8d2dfe658888f86932d00b33141e\",\"urls\":[\"bzz-raw://b99172990db5407f36770352162b51aa3ed639888193e05aa4b216dee23e4b32\",\"dweb:/ipfs/QmaFZTRcpXsF8pp353AfC4eLfdbk6W2BvyfttTMznf3AWY\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/Policy.sol\":{\"keccak256\":\"0xe915d63c89b13039bcc85365a7899b82a9f38baf79013d559bbff3c5bca5ca02\",\"urls\":[\"bzz-raw://5ed782f26dc0479dae35e858a7e888bb45e68f36e22e8daa840cac822ee7c295\",\"dweb:/ipfs/QmNtfxCcUxF6iiq21Tdopau6gQ93LmsmrMjdSM8P15egaB\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/PolicyFactory.sol\":{\"keccak256\":\"0xff4fff4b3273318328712d97bada52cbda8e518460a4c88ebe92f66e395a528e\",\"urls\":[\"bzz-raw://14ba4b6217303d35d0abf2c326c27d6b63c70c523769d9063ade2d0517afdf4d\",\"dweb:/ipfs/Qmbw9bBy4udPcyrWTpURXydgzpFcjedWHEu6N6uypsWMe8\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/access/Roles.sol\":{\"keccak256\":\"0x4c493565b86c4d6347c9c3eb51b560bb44660b0b4e4344a2a9dbf9e1a5f4825e\",\"urls\":[\"bzz-raw://adb9b6e3e20928d61a3457808ed9597d1d2b39fb3cbdd9411cd41facdb2cba20\",\"dweb:/ipfs/Qmbx36rS9Yg1VCzNJXjNGpkXFG7D5PB7eCpPPFo5Kd1w8o\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/access/roles/AdminRole.sol\":{\"keccak256\":\"0x6ff8139d3bbbf056ba16a5ccad66f0503ece04aaf5282cc4e344df3163989376\",\"urls\":[\"bzz-raw://afdd22772733f65f4be5dbec61e66d1408568ce6a1ea037c517227e99144b5dc\",\"dweb:/ipfs/Qmah78U32HkyrQ66MYHiKEcrVQ75jUScmZ2oFqF4665TK6\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/access/roles/MutualRole.sol\":{\"keccak256\":\"0x0d4d833fd880ff7d4bfd714f718d28de32162b35b66129f3fb2fb698c30392ee\",\"urls\":[\"bzz-raw://fbf72ff9dea207ec8329fa85bae9675d5c137d0ca47299d319174fcf7f9be5f8\",\"dweb:/ipfs/QmdG2m8MuyXqrxnUBk7RgtYm9JbM5fzDVLswcck96u3xqs\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xfb2bc29a55c00cae144084619d371b77381e987b157bf893e31237d47e7de601\",\"urls\":[\"bzz-raw://827b0420f47ca568d68b1995e221334ab8ef140339305060161348056924aaa8\",\"dweb:/ipfs/QmaXv5eRgjVXrbFpLTRRbmAQj5k7gDozv8d4HAahNzaQdm\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x49c5b89bae2133913f5b260d7ac23ff1cf63ba02d4e7f746ce9adb9ad5a6eb42\",\"urls\":[\"bzz-raw://8ac7389a37ae970b0682e57a1bf69d8f647fcc604c2221133abe4c22629df158\",\"dweb:/ipfs/QmRpiPjxc5EMmm4G418vREt2DBV97n71o65tSFCKZyQdqZ\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/CoverageModel.sol\":{\"keccak256\":\"0x411da769b95e0934433b8ef028d72abf1f364614331fcf99355f55ba49970d91\",\"urls\":[\"bzz-raw://2b12019433246ddf6204076d033096e1bbe7dcf81811ac84786d9d17590ef187\",\"dweb:/ipfs/QmQjRC221KvPvw6EuQ3x9sVsr4XA3XtuokX13vbzjEmy9X\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/DriverDataModel.sol\":{\"keccak256\":\"0xa27e75fcad69f4b7793d10a49e52c14e4f47f563cc4ddbe34d2286a0b53866f0\",\"urls\":[\"bzz-raw://4078f30f90dcc2b6c5ff798d29a5551b25765a956fd144f445bd78e63270f16f\",\"dweb:/ipfs/QmP1hbJ9SxpTwmqiwMZ9naTw2hdpJV8v8KdFA8Qcvj62o9\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/MutualModel.sol\":{\"keccak256\":\"0xa809d3ef075c20e968066c91b6ffb12053c0a3cf02d1ec5e9bbc8915f390b214\",\"urls\":[\"bzz-raw://aa37c76e7267138f105b15d648b6571f9649358e5db58c327ee8827d445f6a73\",\"dweb:/ipfs/QmXbRJFDsQNT1ArbmSxZFMaMZiPWHrGQDfyyAGxw8XCBSK\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/PolicyHolderDataModel.sol\":{\"keccak256\":\"0x87bf6e4dc06752d29f16a53d8e1687765e76b369632252a32fd81b7ab12a07d5\",\"urls\":[\"bzz-raw://517d2c81faa4955a312995d23e7b182c0ed4f028e5f48bccc634c7919349049b\",\"dweb:/ipfs/QmREay8YLcCurgzkZ7si9sJQ9fziYBvKWtpjgwHKBXoEkM\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/PolicyInformationModel.sol\":{\"keccak256\":\"0xcf659597a06a72588a7d0041fcafb97951ecc073be695e6cc6120d85949ebb6a\",\"urls\":[\"bzz-raw://11a36dcb8aa7bfa1ae008fe61f93969579542854d784c6858688115a8c1ca99f\",\"dweb:/ipfs/QmYMsVGT911zGg3GsyYtTaGynbBUfBMWUYcUUym8gymYK2\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/PolicyModel.sol\":{\"keccak256\":\"0xad2b51452fa07cfcf03c48655a24f3f67e945e50098110f678f51276b0120c5c\",\"urls\":[\"bzz-raw://ceaf77bcafe12c92d308015ddb3274c3c9788ff4d8f3be9ded18e87ded77f265\",\"dweb:/ipfs/QmUWMQ7cbSw6czF1ETavYQuR9UiRxJEenR3ADWPiwStPf2\"]},\"/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/VehicleDataModel.sol\":{\"keccak256\":\"0x174665240f55ad697d21131f279f552817ee2802881f3ddd7b2ca8c2c888a1ba\",\"urls\":[\"bzz-raw://ac896cc17a012ac90bb8154b5678028349d1ce1cf4d9ae959d3f6b7ba0879117\",\"dweb:/ipfs/QmeMfBxcUDH9nPyyJCCGmBkstrUjE1C2RgqNXLpiAhVhuk\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "151:2002:3:-:0;;;100:6:8;:19;;-1:-1:-1;;;;;;100:19:8;109:10;100:19;;;;;;487:29:5;;-1:-1:-1;;;;;487:17:5;:29;:::i;:::-;484:30:6;503:10;-1:-1:-1;;;;;484:18:6;:30;:::i;:::-;151:2002:3;;958:127:5;1022:21;1034:8;1022:7;:11;;;;;;:21;;;;:::i;:::-;1058:20;;-1:-1:-1;;;;;1058:20:5;;;;;;;;958:127;:::o;964:130:6:-;1029:22;1042:8;1029;:12;;;;;;:22;;;;:::i;:::-;1066:21;;-1:-1:-1;;;;;1066:21:6;;;;;;;;964:130;:::o;492:270:4:-;597:20;601:5;608:8;-1:-1:-1;;;;;597:3:4;:20;:::i;:::-;596:21;588:65;;;;-1:-1:-1;;;588:65:4;;;;;;;;;;;;;;;;;663:14;;;;27:10:-1;;23:18;;;45:23;;-1:-1;663:29:4;;;;;;;;;;;;-1:-1:-1;;;;;;663:29:4;-1:-1:-1;;;;;663:29:4;;;;;;;;;730:21;;702:25;;;;;;;;;;-1:-1:-1;;730:25:4;;;702:53;;492:270::o;143:343::-;239:4;-1:-1:-1;;;;;267:22:4;;259:70;;;;-1:-1:-1;;;259:70:4;;;;;;;;;344:14;;;:21;340:69;;-1:-1:-1;393:5:4;386:12;;340:69;-1:-1:-1;;;;;426:53:4;;441:15;:25;;;;;;;;;;;426:14;;;:41;;:14;;441:25;426:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;426:41:4;:53;;-1:-1:-1;143:343:4;;;;;:::o;726:407:-1:-;917:2;931:47;;;230:2;902:18;;;1658:19;266:33;1698:14;;;246:54;319:12;;;888:245;1140:407;1331:2;1345:47;;;570:2;1316:18;;;1658:19;606:34;1698:14;;;586:55;-1:-1;;;661:12;;;654:27;700:12;;;1302:245;;151:2002:3;;;;;;",
  "deployedSourceMap": "151:2002:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;151:2002:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;582:656:3;;;;;;;;;:::i;:::-;;849:103:5;;;;;;;;;:::i;529:107::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1244:906:3;;;;;;;;;:::i;:::-;;;;;;;;;670:142:7;;;:::i;199:91:0:-;;;:::i;432:86:7:-;;;:::i;746:97:5:-;;;;;;;;;:::i;527:109:6:-;;;;;;;;;:::i;524:140:7:-;;;:::i;225:74:8:-;;;:::i;:::-;;;;;;;;303:87;;;:::i;642:100:6:-;;;:::i;:::-;;;;;;;;:98:5;;;:::i;748:99:6:-;;;;;;;;;:::i;853:105::-;;;;;;;;;:::i;582:656:3:-;253:7:7;;;;252:8;244:37;;;;-1:-1:-1;;;244:37:7;;;;;;;;;;;;;;;;;333:20:6::1;342:10;333:8;:20::i;:::-;312:115;;;;-1:-1:-1::0;;;312:115:6::1;;;;;;;;;720:15:3::2;762:11;738:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;-1:-1:::0;847:17:3::2;:19:::0;;::::2;::::0;;::::2;::::0;;;;915:77:::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;915:77:3;;::::2;::::0;;972:10:::2;915:77;::::0;;::::2;::::0;;;794:23:::2;876:36:::0;;;:17:::2;:36:::0;;;;;:116;;;;;;::::2;-1:-1:-1::0;;876:116:3;;::::2;;::::0;;;;;;;::::2;::::0;;;;;::::2;::::0;::::2;;::::0;;720:63;;-1:-1:-1;720:63:3;;1003:181:::2;1023:18:::0;;:26;:33;1019:37;::::2;1003:181;;;1100:18:::0;;:26;:29;;1076:23:::2;::::0;:54:::2;::::0;1127:1;;1100:29;::::2;;;;;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;1076:54:3;;::::2;::::0;;;;::::2;::::0;;;;;;;;-1:-1:-1;1076:54:3;;;1154:17:::2;::::0;1136:36;;:17:::2;:36:::0;;;;;27:10:-1;;39:1:::2;23:18:::0;;::::2;45:23:::0;;1076:97:3;;;;;;;;;::::2;::::0;;::::2;;::::0;;;;::::2;-1:-1:-1::0;;1076:97:3;;::::2;;::::0;;;;::::2;::::0;;;::::2;::::0;;;;;::::2;::::0;::::2;;::::0;;;1058:3:::2;1003:181;;;;1199:32;1215:15;1199:32;;;;;;;;;;;;;;;437:1:6;;582:656:3::0;:::o;849:103:5:-;339:19;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;915:30:::1;936:8;915:20;:30::i;:::-;849:103:::0;:::o;529:107::-;585:4;608:21;:7;620:8;608:21;:11;:21;:::i;:::-;601:28;529:107;-1:-1:-1;;529:107:5:o;1244:906:3:-;-1:-1:-1;;;;;1465:39:3;;;;;;:23;:39;;;;;;;;1424:80;;;;;;;;;;;;;;;;;1347:30;;;;;;1424:80;1465:39;1424:80;1465:39;1424:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1424:80:3;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1585:10:3;1561:35;;;;:23;:35;;;;;;;;1514:82;;;;;;;;;;;;;;;;;1424:80;;-1:-1:-1;1514:44:3;;:82;;-1:-1:-1;1561:35:3;-1:-1:-1;1514:82:3;1561:35;1514:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1514:82:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1645:1;1615:20;:27;:31;:54;;;;1650:19;1658:10;1650:7;:19::i;:::-;1607:106;;;;-1:-1:-1;;;1607:106:3;;;;;;;;;1724:34;1775:14;:21;1761:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;1761:36:3;;1724:73;;1807:31;1855:14;:21;1841:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;1841:36:3;-1:-1:-1;1807:70:3;-1:-1:-1;1892:9:3;1888:203;1911:14;:21;1907:1;:25;1888:203;;;1975:14;1990:1;1975:17;;;;;;;;;;;;;;:33;;;1952:17;1970:1;1952:20;;;;;;;;;;;;;:56;-1:-1:-1;;;;;1952:56:3;;;-1:-1:-1;;;;;1952:56:3;;;;;2042:14;2057:1;2042:17;;;;;;;;;;;;;;:38;;;2022:14;2037:1;2022:17;;;;;;;;-1:-1:-1;;;;;2022:58:3;;;:17;;;;;;;;;;;:58;1934:3;;1888:203;;;-1:-1:-1;2109:17:3;;-1:-1:-1;2128:14:3;-1:-1:-1;;;1244:906:3;;;:::o;670:142:7:-;339:19:5;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;345:7:7::1;::::0;::::1;;337:40;;;;-1:-1:-1::0;;;337:40:7::1;;;;;;;;;755:7:::2;:15:::0;;-1:-1:-1;;755:15:7::2;::::0;;785:20:::2;::::0;::::2;::::0;::::2;::::0;794:10:::2;::::0;785:20:::2;;;;;;;;;;670:142::o:0;199:91:0:-;163:9:8;:7;:9::i;:::-;155:54;;;;-1:-1:-1;;;155:54:8;;;;;;;;;272:10:0::1;259:24;432:86:7::0;504:7;;;;432:86;:::o;746:97:5:-;339:19;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;809:27:::1;827:8;809:17;:27::i;527:109:6:-:0;584:4;607:22;:8;620;607:22;:12;:22;:::i;524:140:7:-;339:19:5;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;253:7:7::1;::::0;::::1;;252:8;244:37;;;;-1:-1:-1::0;;;244:37:7::1;;;;;;;;;610:7:::2;:14:::0;;-1:-1:-1;;610:14:7::2;620:4;610:14;::::0;;639:18:::2;::::0;::::2;::::0;::::2;::::0;646:10:::2;::::0;639:18:::2;;225:74:8::0;266:7;288:6;-1:-1:-1;;;;;288:6:8;225:74;:::o;303:87::-;346:4;379:6;-1:-1:-1;;;;;379:6:8;365:10;:20;;303:87::o;642:100:6:-;682:16;717:18;:8;:16;:18::i;:::-;710:25;;642:100;:::o;:98:5:-;681:16;716:17;:7;:15;:17::i;748:99:6:-;339:19:5;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;812:28:6::1;831:8;812:18;:28::i;853:105::-:0;339:19:5;347:10;339:7;:19::i;:::-;318:112;;;;-1:-1:-1;;;318:112:5;;;;;;;;;920:31:6::1;942:8;920:21;:31::i;1091:255:5:-:0;-1:-1:-1;;;;;1179:22:5;;1191:10;1179:22;;1158:110;;;;-1:-1:-1;;;1158:110:5;;;;;;;;;1278:24;:7;1293:8;1278:24;:14;:24;:::i;:::-;1317:22;;-1:-1:-1;;;;;1317:22:5;;;;;;;;1091:255;:::o;143:343:4:-;239:4;-1:-1:-1;;;;;267:22:4;;259:70;;;;-1:-1:-1;;;259:70:4;;;;;;;;;344:14;;;:21;340:69;;-1:-1:-1;393:5:4;386:12;;340:69;-1:-1:-1;;;;;426:53:4;;441:15;:25;;;;;;;;;;;426:14;;;:41;;:14;;441:25;426:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;426:41:4;:53;;143:343;-1:-1:-1;;;143:343:4:o;958:127:5:-;1022:21;:7;1034:8;1022:21;:11;:21;:::i;:::-;1058:20;;-1:-1:-1;;;;;1058:20:5;;;;;;;;958:127;:::o;1441:134:4:-;1515:16;1554:5;:14;;1547:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1547:21:4;;;;;;;;;;;;;;;;;;;;;;;1441:134;;;:::o;964:130:6:-;1029:22;:8;1042;1029:22;:12;:22;:::i;:::-;1066:21;;-1:-1:-1;;;;;1066:21:6;;;;;;;;964:130;:::o;1100:138::-;1168:25;:8;1184;1168:25;:15;:25;:::i;:::-;1208:23;;-1:-1:-1;;;;;1208:23:6;;;;;;;;1100:138;:::o;768:534:4:-;875:20;879:5;886:8;875:3;:20::i;:::-;867:66;;;;-1:-1:-1;;;867:66:4;;;;;;;;;944:17;964:5;:14;;994:1;979:12;985:5;979;:12::i;:::-;:16;964:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1026:25:4;;;;;;;;;;;;;;964:32;;;;1061:26;;;;;:41;;;964:32;1112:14;;:28;;964:32;;-1:-1:-1;1026:25:4;;964:32;;1112:14;1026:25;;1112:28;;;;;;;;;;;;;;;;;;:40;;-1:-1:-1;;1112:40:4;-1:-1:-1;;;;;1112:40:4;;;;;;1169:25;;;;;;;;;;;;1162:32;-1:-1:-1;1225:14:4;;:21;;-1:-1:-1;;1225:24:4;;;:14;:24;;1266:29;;;;;;;;;;;;;;;1259:36;;-1:-1:-1;;1259:36:4;;;-1:-1:-1;;;;;768:534:4:o;492:270::-;597:20;601:5;608:8;597:3;:20::i;:::-;596:21;588:65;;;;-1:-1:-1;;;588:65:4;;;;;;;;;663:14;;;;27:10:-1;;23:18;;;45:23;;-1:-1;663:29:4;;;;;;;;;;;;-1:-1:-1;;663:29:4;-1:-1:-1;;;;;663:29:4;;;;;;;;;730:21;;702:25;;;;;;;;;;-1:-1:-1;;730:25:4;;;702:53;;492:270::o;1308:127::-;1407:14;;:21;;1308:127::o;151:2002:3:-;;;;;;;;:::o;884:688:-1:-;;1003:3;996:4;988:6;984:17;980:27;970:2;;-1:-1;;1011:12;970:2;1058:6;1045:20;1080:82;1095:66;1154:6;1095:66;;;1080:82;;;1190:21;;;1071:91;-1:-1;1234:4;1247:14;;;;1222:17;;;1342:1;1327:239;1352:6;1349:1;1346:13;1327:239;;;1459:43;1498:3;1234:4;1435:3;1422:17;1226:6;1410:30;;1459:43;;;1447:56;;1517:14;;;;1545;;;;1374:1;1367:9;1327:239;;;1331:14;;;;;963:609;;;;;1581:434;;1679:3;1672:4;1664:6;1660:17;1656:27;1646:2;;-1:-1;;1687:12;1646:2;1734:6;1721:20;45682:18;45674:6;45671:30;45668:2;;;-1:-1;;45704:12;45668:2;1756:61;45777:9;45758:17;;-1:-1;;45754:33;45845:4;45835:15;1756:61;;;1747:70;;1837:6;1830:5;1823:21;1941:3;45845:4;1932:6;1865;1923:16;;1920:25;1917:2;;;1958:1;;1948:12;1917:2;48976:6;45845:4;1865:6;1861:17;45845:4;1899:5;1895:16;48953:30;49032:1;49014:16;;;45845:4;49014:16;49007:27;1899:5;1639:376;-1:-1;;1639:376;2059:2386;;2170:6;;2158:9;2153:3;2149:19;2145:32;2142:2;;;-1:-1;;2180:12;2142:2;2208:22;2170:6;2208:22;;;2199:31;;;2300:17;2287:31;2338:18;;2330:6;2327:30;2324:2;;;2315:1;;2360:12;2324:2;2405:55;2456:3;2447:6;2436:9;2432:22;2405:55;;;2387:16;2380:81;2560:2;2549:9;2545:18;2532:32;2518:46;;2338:18;2576:6;2573:30;2570:2;;;2315:1;;2606:12;2570:2;2651:55;2702:3;2693:6;2682:9;2678:22;2651:55;;;2560:2;2637:5;2633:16;2626:81;2795:2;2784:9;2780:18;2767:32;2753:46;;2338:18;2811:6;2808:30;2805:2;;;2315:1;;2841:12;2805:2;2886:55;2937:3;2928:6;2917:9;2913:22;2886:55;;;2795:2;2872:5;2868:16;2861:81;3034:2;3023:9;3019:18;3006:32;2992:46;;2338:18;3050:6;3047:30;3044:2;;;2315:1;;3080:12;3044:2;3125:55;3176:3;3167:6;3156:9;3152:22;3125:55;;;3034:2;3111:5;3107:16;3100:81;3278:3;3267:9;3263:19;3250:33;3236:47;;2338:18;3295:6;3292:30;3289:2;;;2315:1;;3325:12;3289:2;3370:55;3421:3;3412:6;3401:9;3397:22;3370:55;;;3278:3;3356:5;3352:16;3345:81;3520:3;3509:9;3505:19;3492:33;3478:47;;2338:18;3537:6;3534:30;3531:2;;;2315:1;;3567:12;3531:2;3612:55;3663:3;3654:6;3643:9;3639:22;3612:55;;;3520:3;3598:5;3594:16;3587:81;3763:3;3752:9;3748:19;3735:33;3721:47;;2338:18;3780:6;3777:30;3774:2;;;2315:1;;3810:12;3774:2;3855:55;3906:3;3897:6;3886:9;3882:22;3855:55;;;3763:3;3841:5;3837:16;3830:81;4005:3;3994:9;3990:19;3977:33;3963:47;;2338:18;4022:6;4019:30;4016:2;;;2315:1;;4052:12;4016:2;4097:55;4148:3;4139:6;4128:9;4124:22;4097:55;;;4005:3;4083:5;4079:16;4072:81;4253:3;;;;4242:9;4238:19;4225:33;2338:18;4270:6;4267:30;4264:2;;;2315:1;;4300:12;4264:2;4347:76;4419:3;4410:6;4399:9;4395:22;4347:76;;;4253:3;4331:5;4327:18;4320:104;;;;2136:2309;;;;;4492:2902;;4605:6;;4593:9;4588:3;4584:19;4580:32;4577:2;;;-1:-1;;4615:12;4577:2;4643:22;4605:6;4643:22;;;4634:31;;;4736:17;4723:31;4774:18;;4766:6;4763:30;4760:2;;;4751:1;;4796:12;4760:2;4841:55;4892:3;4883:6;4872:9;4868:22;4841:55;;;4823:16;4816:81;4965:2;5023:9;5019:22;16266:20;4965:2;4984:5;4980:16;4973:75;5146:2;5135:9;5131:18;5118:32;5104:46;;4774:18;5162:6;5159:30;5156:2;;;4751:1;;5192:12;5156:2;5237:55;5288:3;5279:6;5268:9;5264:22;5237:55;;;5146:2;5223:5;5219:16;5212:81;5384:2;5373:9;5369:18;5356:32;5342:46;;4774:18;5400:6;5397:30;5394:2;;;4751:1;;5430:12;5394:2;5475:55;5526:3;5517:6;5506:9;5502:22;5475:55;;;5384:2;5461:5;5457:16;5450:81;5623:3;5612:9;5608:19;5595:33;5581:47;;4774:18;5640:6;5637:30;5634:2;;;4751:1;;5670:12;5634:2;5715:55;5766:3;5757:6;5746:9;5742:22;5715:55;;;5623:3;5701:5;5697:16;5690:81;5862:3;5851:9;5847:19;5834:33;5820:47;;4774:18;5879:6;5876:30;5873:2;;;4751:1;;5909:12;5873:2;5954:55;6005:3;5996:6;5985:9;5981:22;5954:55;;;5862:3;5940:5;5936:16;5929:81;6105:3;6094:9;6090:19;6077:33;6063:47;;4774:18;6122:6;6119:30;6116:2;;;4751:1;;6152:12;6116:2;6197:55;6248:3;6239:6;6228:9;6224:22;6197:55;;;6105:3;6183:5;6179:16;6172:81;6341:3;6330:9;6326:19;6313:33;6299:47;;4774:18;6358:6;6355:30;6352:2;;;4751:1;;6388:12;6352:2;6433:55;6484:3;6475:6;6464:9;6460:22;6433:55;;;6341:3;6415:16;;6408:81;6558:3;6615:22;;;16266:20;6574:18;;;6567:77;6735:3;;-1:-1;6720:19;;;6707:33;6749:30;;;6746:2;;;4751:1;;6782:12;6746:2;6829:55;6880:3;6871:6;6860:9;6856:22;6829:55;;;6735:3;6813:5;6809:18;6802:83;;6978:3;;;;6967:9;6963:19;6950:33;4774:18;6995:6;6992:30;6989:2;;;4751:1;;7025:12;6989:2;7072:55;7123:3;7114:6;7103:9;7099:22;7072:55;;;6978:3;7056:5;7052:18;7045:83;;7223:3;;;;7212:9;7208:19;7195:33;4774:18;7240:6;7237:30;7234:2;;;4751:1;;7270:12;7234:2;7317:55;7368:3;7359:6;7348:9;7344:22;7317:55;;7433:428;;7542:4;;7530:9;7525:3;7521:19;7517:30;7514:2;;;-1:-1;;7550:12;7514:2;7578:20;7542:4;7578:20;;;7569:29;;7664:17;7651:31;7702:18;7694:6;7691:30;7688:2;;;7679:1;;7724:12;7688:2;7826:6;7815:9;7811:22;273:3;266:4;258:6;254:17;250:27;240:2;;-1:-1;;281:12;240:2;328:6;315:20;301:34;;350:76;365:60;418:6;365:60;;350:76;454:21;;;511:14;;;;486:17;;;600;;;591:27;;;;588:36;-1:-1;585:2;;;-1:-1;;627:12;585:2;-1:-1;653:10;;647:206;672:6;669:1;666:13;647:206;;;85:6;72:20;97:33;124:5;97:33;;;740:50;;694:1;687:9;;;;;804:14;;;;832;;647:206;;;-1:-1;7744:96;;-1:-1;7751:16;;7508:353;-1:-1;;;;;7508:353;7920:1798;;8039:4;8027:9;8022:3;8018:19;8014:30;8011:2;;;-1:-1;;8047:12;8011:2;8075:20;8039:4;8075:20;;;8066:29;;8166:17;8153:31;8204:18;;8196:6;8193:30;8190:2;;;8181:1;;8226:12;8190:2;8271:55;8322:3;8313:6;8302:9;8298:22;8271:55;;;8253:16;8246:81;8395:2;8453:9;8449:22;16266:20;8395:2;8414:5;8410:16;8403:75;8576:2;8565:9;8561:18;8548:32;8534:46;;8204:18;8592:6;8589:30;8586:2;;;8181:1;;8622:12;8586:2;8667:55;8718:3;8709:6;8698:9;8694:22;8667:55;;;8576:2;8653:5;8649:16;8642:81;8814:2;8803:9;8799:18;8786:32;8772:46;;8204:18;8830:6;8827:30;8824:2;;;8181:1;;8860:12;8824:2;8905:55;8956:3;8947:6;8936:9;8932:22;8905:55;;;8814:2;8891:5;8887:16;8880:81;9053:3;9042:9;9038:19;9025:33;9011:47;;8204:18;9070:6;9067:30;9064:2;;;8181:1;;9100:12;9064:2;9145:55;9196:3;9187:6;9176:9;9172:22;9145:55;;;9053:3;9131:5;9127:16;9120:81;9292:3;9281:9;9277:19;9264:33;9250:47;;8204:18;9309:6;9306:30;9303:2;;;8181:1;;9339:12;9303:2;9384:55;9435:3;9426:6;9415:9;9411:22;9384:55;;;9292:3;9370:5;9366:16;9359:81;9549:3;9538:9;9534:19;9521:33;9507:47;;8204:18;9566:6;9563:30;9560:2;;;8181:1;;9596:12;9560:2;;9641:55;9692:3;9683:6;9672:9;9668:22;9641:55;;;9549:3;9627:5;9623:16;9616:81;;8005:1713;;;;;9779:1214;;9899:4;9887:9;9882:3;9878:19;9874:30;9871:2;;;-1:-1;;9907:12;9871:2;9935:20;9899:4;9935:20;;;9926:29;;10022:17;10009:31;10060:18;;10052:6;10049:30;10046:2;;;10037:1;;10082:12;10046:2;10127:55;10178:3;10169:6;10158:9;10154:22;10127:55;;;10109:16;10102:81;10275:2;10264:9;10260:18;10247:32;10233:46;;10060:18;10291:6;10288:30;10285:2;;;10037:1;;10321:12;10285:2;10366:55;10417:3;10408:6;10397:9;10393:22;10366:55;;;10275:2;10352:5;10348:16;10341:81;10492:2;10550:9;10546:22;16266:20;10492:2;10511:5;10507:16;10500:75;10643:2;10701:9;10697:22;16266:20;10643:2;10662:5;10658:16;10651:75;10824:3;10813:9;10809:19;10796:33;10782:47;;10060:18;10841:6;10838:30;10835:2;;;10037:1;;10871:12;10835:2;;10916:55;10967:3;10958:6;10947:9;10943:22;10916:55;;;10824:3;10902:5;10898:16;10891:81;;9865:1128;;;;;12860:3332;;12974:6;;12962:9;12957:3;12953:19;12949:32;12946:2;;;-1:-1;;12984:12;12946:2;13012:22;12974:6;13012:22;;;13003:31;;;13102:17;13089:31;13140:18;;13132:6;13129:30;13126:2;;;13117:1;;13162:12;13126:2;13207:55;13258:3;13249:6;13238:9;13234:22;13207:55;;;13189:16;13182:81;13354:2;13343:9;13339:18;13326:32;13312:46;;13140:18;13370:6;13367:30;13364:2;;;13117:1;;13400:12;13364:2;13445:55;13496:3;13487:6;13476:9;13472:22;13445:55;;;13354:2;13431:5;13427:16;13420:81;13591:2;13580:9;13576:18;13563:32;13549:46;;13140:18;13607:6;13604:30;13601:2;;;13117:1;;13637:12;13601:2;13682:55;13733:3;13724:6;13713:9;13709:22;13682:55;;;13591:2;13668:5;13664:16;13657:81;13834:2;13823:9;13819:18;13806:32;13792:46;;13140:18;13850:6;13847:30;13844:2;;;13117:1;;13880:12;13844:2;13925:55;13976:3;13967:6;13956:9;13952:22;13925:55;;;13834:2;13911:5;13907:16;13900:81;14081:3;14070:9;14066:19;14053:33;14039:47;;13140:18;14098:6;14095:30;14092:2;;;13117:1;;14128:12;14092:2;14173:55;14224:3;14215:6;14204:9;14200:22;14173:55;;;14081:3;14159:5;14155:16;14148:81;14323:3;14312:9;14308:19;14295:33;14281:47;;13140:18;14340:6;14337:30;14334:2;;;13117:1;;14370:12;14334:2;14415:55;14466:3;14457:6;14446:9;14442:22;14415:55;;;14323:3;14401:5;14397:16;14390:81;14568:3;14557:9;14553:19;14540:33;14526:47;;13140:18;14585:6;14582:30;14579:2;;;13117:1;;14615:12;14579:2;14660:55;14711:3;14702:6;14691:9;14687:22;14660:55;;;14568:3;14646:5;14642:16;14635:81;14808:3;14797:9;14793:19;14780:33;14766:47;;13140:18;14825:6;14822:30;14819:2;;;13117:1;;14855:12;14819:2;14900:55;14951:3;14942:6;14931:9;14927:22;14900:55;;;14808:3;14886:5;14882:16;14875:81;15048:3;;;;15037:9;15033:19;15020:33;13140:18;15065:6;15062:30;15059:2;;;13117:1;;15095:12;15059:2;15142:55;15193:3;15184:6;15173:9;15169:22;15142:55;;;15048:3;15126:5;15122:18;15115:83;;15287:3;;;;15276:9;15272:19;15259:33;13140:18;15304:6;15301:30;15298:2;;;13117:1;;15334:12;15298:2;15381:55;15432:3;15423:6;15412:9;15408:22;15381:55;;;15287:3;15365:5;15361:18;15354:83;;15532:3;;;;15521:9;15517:19;15504:33;13140:18;15549:6;15546:30;15543:2;;;13117:1;;15579:12;15543:2;15626:55;15677:3;15668:6;15657:9;15653:22;15626:55;;;15532:3;15610:5;15606:18;15599:83;;15781:3;;;;15770:9;15766:19;15753:33;13140:18;15798:6;15795:30;15792:2;;;13117:1;;15828:12;15792:2;15875:55;15926:3;15917:6;15906:9;15902:22;15875:55;;;15781:3;15859:5;15855:18;15848:83;;16021:3;;;;16010:9;16006:19;15993:33;13140:18;16038:6;16035:30;16032:2;;;13117:1;;16068:12;16336:241;;16440:2;16428:9;16419:7;16415:23;16411:32;16408:2;;;-1:-1;;16446:12;16408:2;85:6;72:20;-1:-1;;;;;49517:5;48370:54;49492:5;49489:35;49479:2;;-1:-1;;49528:12;49479:2;16498:63;16402:175;-1:-1;;;16402:175;16584:397;;16723:2;16711:9;16702:7;16698:23;16694:32;16691:2;;;-1:-1;;16729:12;16691:2;16787:17;16774:31;16825:18;;16817:6;16814:30;16811:2;;;-1:-1;;16847:12;16811:2;16948:6;16937:9;16933:22;11167:4;11155:9;11150:3;11146:19;11142:30;11139:2;;;-1:-1;;11175:12;11139:2;11203:20;11167:4;11203:20;;;11194:29;;11288:17;11275:31;16825:18;11318:6;11315:30;11312:2;;;-1:-1;;11348:12;11312:2;11393:69;11458:3;11449:6;11438:9;11434:22;11393:69;;;11375:16;11368:95;;16723:2;11545:9;11541:18;11528:32;16825:18;11572:6;11569:30;11566:2;;;-1:-1;;11602:12;11566:2;11647:71;11714:3;11705:6;11694:9;11690:22;11647:71;;;16723:2;11633:5;11629:16;11622:97;;11821:2;11810:9;11806:18;11793:32;16825:18;11837:6;11834:30;11831:2;;;-1:-1;;11867:12;11831:2;11912:80;11988:3;11979:6;11968:9;11964:22;11912:80;;;11821:2;11898:5;11894:16;11887:106;;12095:2;12084:9;12080:18;12067:32;16825:18;12111:6;12108:30;12105:2;;;-1:-1;;12141:12;12105:2;12186:79;12261:3;12252:6;12241:9;12237:22;12186:79;;;12095:2;12172:5;12168:16;12161:105;;12362:3;12351:9;12347:19;12334:33;16825:18;12379:6;12376:30;12373:2;;;-1:-1;;12409:12;12373:2;12454:74;12524:3;12515:6;12504:9;12500:22;12454:74;;;12362:3;12440:5;12436:16;12429:100;;12624:3;12613:9;12609:19;12596:33;16825:18;12641:6;12638:30;12635:2;;;-1:-1;;12671:12;12635:2;12716:73;12785:3;12776:6;12765:9;12761:22;12716:73;;;12624:3;12698:16;;12691:99;-1:-1;12702:5;;16685:296;-1:-1;;;;;16685:296;17770:690;;17963:5;46438:12;47358:6;47353:3;47346:19;47395:4;;47390:3;47386:14;17975:93;;47395:4;18139:5;45978:14;-1:-1;18178:260;18203:6;18200:1;18197:13;18178:260;;;18264:13;;-1:-1;;;;;48370:54;17570:37;;17142:14;;;;46979;;;;18225:1;18218:9;18178:260;;;-1:-1;18444:10;;17894:566;-1:-1;;;;;17894:566;19190:860;;19383:5;46438:12;47358:6;47353:3;47346:19;47395:4;;47390:3;47386:14;19395:89;;;;47395:4;19541:6;19537:17;19532:3;19528:27;19516:39;;47395:4;19628:5;45978:14;-1:-1;19667:344;19692:6;19689:1;19686:13;19667:344;;;19754:9;19748:4;19744:20;19739:3;19732:33;17284:62;17342:3;19799:6;19793:13;17284:62;;;19990:14;;;;19813:84;-1:-1;46979:14;;;;19714:1;19707:9;19667:344;;;-1:-1;20034:10;;19312:738;-1:-1;;;;;;;19312:738;20169:319;;20296:5;46438:12;47358:6;47353:3;47346:19;-1:-1;49121:101;49135:6;49132:1;49129:13;49121:101;;;47395:4;49202:11;;;;;49196:18;49183:11;;;;;49176:39;49150:10;49121:101;;;49237:6;49234:1;49231:13;49228:2;;;-1:-1;47395:4;49293:6;47390:3;49284:16;;49277:27;49228:2;-1:-1;45777:9;49393:14;-1:-1;;49389:28;20444:39;;;;47395:4;20444:39;;20247:241;-1:-1;;20247:241;24217:2311;;24356:6;24437:16;24431:23;24356:6;24474:14;24467:38;24520:69;24356:6;24351:3;24347:16;24570:12;24520:69;;;24684:4;24677:5;24673:16;24667:23;24647:43;;24736:3;24730:4;24726:14;24684:4;24714:3;24710:14;24703:38;24756:69;24820:4;24806:12;24756:69;;;24748:77;;;24909:4;24902:5;24898:16;24892:23;24872:43;;24961:3;24955:4;24951:14;24909:4;24939:3;24935:14;24928:38;24981:69;25045:4;25031:12;24981:69;;;25138:4;25131:5;25127:16;25121:23;25101:43;;25190:3;25184:4;25180:14;25138:4;25168:3;25164:14;25157:38;25210:69;25274:4;25260:12;25210:69;;;25202:77;;;25372:4;25365:5;25361:16;25355:23;25335:43;;25424:3;25418:4;25414:14;25372:4;25402:3;25398:14;25391:38;25444:69;25508:4;25494:12;25444:69;;;25603:4;25596:5;25592:16;25586:23;25566:43;;25655:3;25649:4;25645:14;25603:4;25633:3;25629:14;25622:38;25675:69;25739:4;25725:12;25675:69;;;25667:77;;;25835:4;25828:5;25824:16;25818:23;25798:43;;25887:3;25881:4;25877:14;25835:4;25865:3;25861:14;25854:38;25907:69;25971:4;25957:12;25907:69;;;26066:4;26059:5;26055:16;26049:23;26029:43;;26118:3;26112:4;26108:14;26066:4;26096:3;26092:14;26085:38;26138:69;26202:4;26188:12;26138:69;;;26130:77;;;26303:6;;;;26296:5;26292:18;26286:25;26359:3;26353:4;26349:14;26303:6;26335:3;26331:16;26324:40;26379:111;26485:4;26471:12;26379:111;;;26512:11;24329:2199;-1:-1;;;;;;24329:2199;26612:2821;;26755:6;26837:16;26831:23;26755:6;26874:14;26867:38;26920:69;26755:6;26750:3;26746:16;26970:12;26920:69;;;27081:4;27074:5;27070:16;27064:23;27081:4;27145:3;27141:14;38403:37;27244:4;27237:5;27233:16;27227:23;27207:43;;27296:3;27290:4;27286:14;27244:4;27274:3;27270:14;27263:38;27316:69;27380:4;27366:12;27316:69;;;27308:77;;;27472:4;27465:5;27461:16;27455:23;27435:43;;27524:3;27518:4;27514:14;27472:4;27502:3;27498:14;27491:38;27544:69;27608:4;27594:12;27544:69;;;27701:4;27694:5;27690:16;27684:23;27664:43;;27753:3;27747:4;27743:14;27701:4;27731:3;27727:14;27720:38;27773:69;27837:4;27823:12;27773:69;;;27765:77;;;27929:4;27922:5;27918:16;27912:23;27892:43;;27981:3;27975:4;27971:14;27929:4;27959:3;27955:14;27948:38;28001:69;28065:4;28051:12;28001:69;;;28161:4;28154:5;28150:16;28144:23;28124:43;;28213:3;28207:4;28203:14;28161:4;28191:3;28187:14;28180:38;28233:69;28297:4;28283:12;28233:69;;;28225:77;;;28386:4;28379:5;28375:16;28369:23;28349:43;;28438:3;28432:4;28428:14;28386:4;28416:3;28412:14;28405:38;28458:69;28522:4;28508:12;28458:69;;;28620:6;28609:18;;;28603:25;28682:16;;;38403:37;28780:6;28769:18;;;28763:25;28826:14;;;28808:16;;;28801:40;28780:6;;-1:-1;28763:25;-1:-1;28856:69;28830:4;28763:25;28856:69;;;28848:77;;;;29014:6;;29007:5;29003:18;28997:25;29070:3;29064:4;29060:14;29014:6;29046:3;29042:16;29035:40;29090:69;29154:4;29140:12;29090:69;;;29082:77;;;29250:6;;;;29243:5;29239:18;29233:25;29306:3;29300:4;29296:14;29250:6;29282:3;29278:16;29271:40;29326:69;29390:4;29376:12;29326:69;;29501:430;;29711:16;29705:23;29636:4;29748:14;29741:38;29794:99;29636:4;29631:3;29627:14;29874:12;29794:99;;;29915:11;29609:322;-1:-1;;;;29609:322;30039:1752;;30274:16;30268:23;30194:4;30311:14;30304:38;30357:69;30194:4;30189:3;30185:14;30407:12;30357:69;;;30518:4;30511:5;30507:16;30501:23;30518:4;30582:3;30578:14;38403:37;30681:4;30674:5;30670:16;30664:23;30644:43;;30733:3;30727:4;30723:14;30681:4;30711:3;30707:14;30700:38;30753:69;30817:4;30803:12;30753:69;;;30909:4;30902:5;30898:16;30892:23;30872:43;;30961:3;30955:4;30951:14;30909:4;30939:3;30935:14;30928:38;30981:69;31045:4;31031:12;30981:69;;;30973:77;;;31138:4;31131:5;31127:16;31121:23;31101:43;;31190:3;31184:4;31180:14;31138:4;31168:3;31164:14;31157:38;31210:69;31274:4;31260:12;31210:69;;;31366:4;31359:5;31355:16;31349:23;31329:43;;31418:3;31412:4;31408:14;31366:4;31396:3;31392:14;31385:38;31438:69;31502:4;31488:12;31438:69;;;31430:77;;;31612:4;31605:5;31601:16;31595:23;31575:43;;31664:3;31658:4;31654:14;31612:4;31642:3;31638:14;31631:38;31684:69;31748:4;31734:12;31684:69;;;31775:11;30167:1624;-1:-1;;;;;30167:1624;31903:1211;;32136:16;32130:23;32060:4;32173:14;32166:38;32219:69;32060:4;32055:3;32051:14;32269:12;32219:69;;;32376:4;32369:5;32365:16;32359:23;32339:43;;32428:3;32422:4;32418:14;32376:4;32406:3;32402:14;32395:38;32448:69;32512:4;32498:12;32448:69;;;32611:4;32604:5;32600:16;32594:23;32611:4;32675:3;32671:14;38403:37;32772:4;32765:5;32761:16;32755:23;32772:4;32836:3;32832:14;38403:37;32935:4;32928:5;32924:16;32918:23;32898:43;;32987:3;32981:4;32977:14;32935:4;32965:3;32961:14;32954:38;33007:69;33071:4;33057:12;33007:69;;35132:3203;;35277:6;35356:16;35350:23;35277:6;35393:14;35386:38;35439:69;35277:6;35272:3;35268:16;35489:12;35439:69;;;35595:4;35588:5;35584:16;35578:23;35558:43;;35647:3;35641:4;35637:14;35595:4;35625:3;35621:14;35614:38;35667:69;35731:4;35717:12;35667:69;;;35659:77;;;35822:4;35815:5;35811:16;35805:23;35785:43;;35874:3;35868:4;35864:14;35822:4;35852:3;35848:14;35841:38;35894:69;35958:4;35944:12;35894:69;;;36055:4;36048:5;36044:16;36038:23;36018:43;;36107:3;36101:4;36097:14;36055:4;36085:3;36081:14;36074:38;36127:69;36191:4;36177:12;36127:69;;;36119:77;;;36292:4;36285:5;36281:16;36275:23;36255:43;;36344:3;36338:4;36334:14;36292:4;36322:3;36318:14;36311:38;36364:69;36428:4;36414:12;36364:69;;;36523:4;36516:5;36512:16;36506:23;36486:43;;36575:3;36569:4;36565:14;36523:4;36553:3;36549:14;36542:38;36595:69;36659:4;36645:12;36595:69;;;36587:77;;;36757:4;36750:5;36746:16;36740:23;36720:43;;36809:3;36803:4;36799:14;36757:4;36787:3;36783:14;36776:38;36829:69;36893:4;36879:12;36829:69;;;36986:4;36979:5;36975:16;36969:23;36949:43;;37038:3;37032:4;37028:14;36986:4;37016:3;37012:14;37005:38;37058:69;37122:4;37108:12;37058:69;;;37050:77;;;37215:6;;;;37208:5;37204:18;37198:25;37271:3;37265:4;37261:14;37215:6;37247:3;37243:16;37236:40;37291:69;37355:4;37341:12;37291:69;;;37283:77;;;;37445:6;;37438:5;37434:18;37428:25;37501:3;37495:4;37491:14;37445:6;37477:3;37473:16;37466:40;37521:69;37585:4;37571:12;37521:69;;;37513:77;;;37681:6;;;;37674:5;37670:18;37664:25;37737:3;37731:4;37727:14;37681:6;37713:3;37709:16;37702:40;37757:69;37821:4;37807:12;37757:69;;;37749:77;;;;37921:6;;37914:5;37910:18;37904:25;37977:3;37971:4;37967:14;37921:6;37953:3;37949:16;37942:40;37997:69;38061:4;38047:12;37997:69;;;37989:77;;;38152:6;;;;38145:5;38141:18;38135:25;38208:3;38202:4;38198:14;38152:6;38184:3;38180:16;38173:40;38228:69;38292:4;38278:12;38228:69;;38452:213;-1:-1;;;;;48370:54;;;;17570:37;;38570:2;38555:18;;38541:124;38908:361;;39076:2;39097:17;39090:47;39151:108;39076:2;39065:9;39061:18;39245:6;39151:108;;39276:620;;39522:2;39543:17;39536:47;39597:108;39522:2;39511:9;39507:18;39691:6;39597:108;;;39753:9;39747:4;39743:20;39738:2;39727:9;39723:18;39716:48;39778:108;39881:4;39872:6;39778:108;;39903:201;48282:13;;48275:21;20123:34;;40015:2;40000:18;;39986:118;40111:407;40302:2;40316:47;;;20720:2;40287:18;;;47346:19;20756:22;47386:14;;;20736:43;20798:12;;;40273:245;40525:407;40716:2;40730:47;;;21049:2;40701:18;;;47346:19;21085:33;47386:14;;;21065:54;21138:12;;;40687:245;40939:407;41130:2;41144:47;;;21389:2;41115:18;;;47346:19;21425:34;47386:14;;;21405:55;21494:9;21480:12;;;21473:31;21523:12;;;41101:245;41353:407;41544:2;41558:47;;;21774:2;41529:18;;;47346:19;21810:34;47386:14;;;21790:55;21879:18;21865:12;;;21858:40;21917:12;;;41515:245;41767:407;41958:2;41972:47;;;22168:2;41943:18;;;47346:19;22204:34;47386:14;;;22184:55;22273:5;22259:12;;;22252:27;22298:12;;;41929:245;42181:407;42372:2;42386:47;;;22549:2;42357:18;;;47346:19;22585:18;47386:14;;;22565:39;22623:12;;;42343:245;42595:407;42786:2;42800:47;;;22874:2;42771:18;;;47346:19;22910:34;47386:14;;;22890:55;22979:3;22965:12;;;22958:25;23002:12;;;42757:245;43009:407;43200:2;43214:47;;;23253:2;43185:18;;;47346:19;23289:34;47386:14;;;23269:55;23358:11;23344:12;;;23337:33;23389:12;;;43171:245;43423:407;43614:2;43628:47;;;23640:2;43599:18;;;47346:19;23676:34;47386:14;;;23656:55;23745:16;23731:12;;;23724:38;23781:12;;;43585:245;43837:407;44028:2;44042:47;;;44013:18;;;47346:19;24068:34;47386:14;;;24048:55;24122:12;;;43999:245;44251:401;;44439:2;44460:17;44453:47;33449:16;33443:23;33375:4;44439:2;44428:9;44424:18;33479:38;33532:97;33366:14;44428:9;33366:14;33610:12;33532:97;;;44439:2;33711:5;33707:16;33701:23;33681:43;;45777:9;;33760:14;44428:9;33764:4;33760:14;;33744;44428:9;33744:14;33737:38;33790:101;33886:4;33872:12;33790:101;;;33744:14;33982:5;33978:16;33972:23;33952:43;;33760:14;44428:9;34035:4;34031:14;;34015;44428:9;34015:14;34008:38;34061:119;34175:4;34161:12;34061:119;;;34053:127;;;34015:14;34271:5;34267:16;34261:23;34241:43;;33760:14;44428:9;34324:4;34320:14;;34304;44428:9;34304:14;34297:38;34350:117;34462:4;34448:12;34350:117;;;34304:14;34552:5;34548:16;34542:23;34522:43;;33760:14;44428:9;34605:4;34601:14;;34585;44428:9;34585:14;34578:38;34631:107;34733:4;34719:12;34631:107;;;34623:115;;;34585:14;34822:5;34818:16;34812:23;34792:43;;33760:14;44428:9;34875:4;34871:14;;33375:4;44428:9;34855:14;34848:38;;34901:105;35001:4;34987:12;34901:105;;44659:256;44721:2;44715:9;44747:17;;;44822:18;44807:34;;44843:22;;;44804:62;44801:2;;;44879:1;;44869:12;44801:2;44721;44888:22;44699:216;;-1:-1;44699:216;44922:300;;45077:18;45069:6;45066:30;45063:2;;;-1:-1;;45099:12;45063:2;-1:-1;45144:4;45132:17;;;45197:15;;45000:222;49430:117;-1:-1;;;;;49517:5;48370:54;49492:5;49489:35;49479:2;;49538:1;;49528:12",
  "source": "pragma solidity 0.6.4;\npragma experimental ABIEncoderV2;\n\nimport \"./AbstractFactory.sol\";\n\nimport \"./policy/PolicyModel.sol\";\n\nimport \"./Policy.sol\";\n\ncontract PolicyFactory is \n    AbstractFactory, \n    PolicyModel\n{\n    struct PolicyInstance {\n        address instanceAddress;\n        address instanceAddressOwner;\n    }\n\n    mapping(uint256 => PolicyInstance) private _policiesInstance;\n    uint256 private _policyInstanceId; \n\n    mapping(address => PolicyInstance[]) private _multuaPoliciesInstance;\n    \n    event PolicyGenerated(\n        address instancecAddress\n    );\n\n    function generatePolicy(\n        PolicyModelStruct memory policyModel\n    ) public\n        whenNotPaused\n        onlyMutual\n    {\n        Policy instance = new Policy(\n            policyModel\n        );\n\n        address instanceAddress = address(instance);\n        _policyInstanceId++;\n        _policiesInstance[_policyInstanceId] = PolicyInstance(\n            instanceAddress,\n            msg.sender\n        );\n\n        for(uint i = 0; i < policyModel.mutual.wallets.length; i++){\n            _multuaPoliciesInstance[policyModel.mutual.wallets[i]].push(_policiesInstance[_policyInstanceId]);\n        }\n\n        emit PolicyGenerated(instanceAddress);\n    }\n\n    function consultMutualPolicies(\n        address multualAddress\n    ) public \n      view\n      returns (address[] memory policyAddress, address[] memory ownerAddress)\n    {\n        PolicyInstance[] memory policyInstance = _multuaPoliciesInstance[multualAddress];\n        PolicyInstance[] memory policyInstanceMultua = _multuaPoliciesInstance[msg.sender];\n\n        require(policyInstanceMultua.length > 0 || isAdmin(msg.sender), 'PolicyFactory: must be multual or Admin');\n\n        address[] memory instanceAddresses = new address[](policyInstance.length);\n        address[] memory ownerAddresses = new address[](policyInstance.length);\n\n        for(uint256 i = 0; i < policyInstance.length; i++){\n            instanceAddresses[i] = policyInstance[i].instanceAddress;\n            ownerAddresses[i] = policyInstance[i].instanceAddressOwner;\n        }\n\n        return (instanceAddresses, ownerAddresses);\n    }\n\n}",
  "sourcePath": "C:/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/PolicyFactory.sol",
  "ast": {
    "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/PolicyFactory.sol",
    "exportedSymbols": {
      "PolicyFactory": [
        643
      ]
    },
    "id": 644,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 444,
        "literals": [
          "solidity",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "id": 445,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:3"
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/AbstractFactory.sol",
        "file": "./AbstractFactory.sol",
        "id": 446,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 23,
        "src": "58:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/PolicyModel.sol",
        "file": "./policy/PolicyModel.sol",
        "id": 447,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 1324,
        "src": "91:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/Policy.sol",
        "file": "./Policy.sol",
        "id": 448,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 443,
        "src": "127:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 449,
              "name": "AbstractFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "182:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFactory_$22",
                "typeString": "contract AbstractFactory"
              }
            },
            "id": 450,
            "nodeType": "InheritanceSpecifier",
            "src": "182:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 451,
              "name": "PolicyModel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1323,
              "src": "204:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyModel_$1323",
                "typeString": "contract PolicyModel"
              }
            },
            "id": 452,
            "nodeType": "InheritanceSpecifier",
            "src": "204:11:3"
          }
        ],
        "contractDependencies": [
          22,
          442,
          953,
          1074,
          1155,
          1198,
          1221,
          1249,
          1256,
          1274,
          1288,
          1323,
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 643,
        "linearizedBaseContracts": [
          643,
          1323,
          1249,
          1353,
          1274,
          1288,
          1221,
          1256,
          22,
          1074,
          1155,
          953,
          1198
        ],
        "name": "PolicyFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyFactory.PolicyInstance",
            "id": 457,
            "members": [
              {
                "constant": false,
                "id": 454,
                "name": "instanceAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 457,
                "src": "254:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 453,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 456,
                "name": "instanceAddressOwner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 457,
                "src": "287:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 455,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PolicyInstance",
            "nodeType": "StructDefinition",
            "scope": 643,
            "src": "222:100:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 461,
            "name": "_policiesInstance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "328:60:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
              "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance)"
            },
            "typeName": {
              "id": 460,
              "keyType": {
                "id": 458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "328:34:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance)"
              },
              "valueType": {
                "contractScope": null,
                "id": 459,
                "name": "PolicyInstance",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 457,
                "src": "347:14:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                  "typeString": "struct PolicyFactory.PolicyInstance"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 463,
            "name": "_policyInstanceId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "394:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 462,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 468,
            "name": "_multuaPoliciesInstance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "435:68:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct PolicyFactory.PolicyInstance[])"
            },
            "typeName": {
              "id": 467,
              "keyType": {
                "id": 464,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct PolicyFactory.PolicyInstance[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 465,
                  "name": "PolicyInstance",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 457,
                  "src": "454:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                    "typeString": "struct PolicyFactory.PolicyInstance"
                  }
                },
                "id": 466,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "454:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                  "typeString": "struct PolicyFactory.PolicyInstance[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 472,
            "name": "PolicyGenerated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "indexed": false,
                  "name": "instancecAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 472,
                  "src": "545:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:40:3"
            },
            "src": "514:62:3"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "710:528:3",
              "statements": [
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "name": "instance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 540,
                      "src": "720:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Policy_$442",
                        "typeString": "contract Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 481,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 442,
                        "src": "720:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "policyModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "762:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                          "typeString": "struct PolicyModel.PolicyModelStruct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                          "typeString": "struct PolicyModel.PolicyModelStruct memory"
                        }
                      ],
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "738:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_struct$_PolicyModelStruct_$1322_memory_ptr_$returns$_t_contract$_Policy_$442_$",
                        "typeString": "function (struct PolicyModel.PolicyModelStruct memory) returns (contract Policy)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 483,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 442,
                        "src": "742:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$442",
                      "typeString": "contract Policy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "720:63:3"
                },
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "name": "instanceAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 540,
                      "src": "794:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "794:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "828:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      ],
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "820:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "820:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "794:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "847:19:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "_policyInstanceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "847:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "847:19:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 498,
                        "name": "_policiesInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "876:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                          "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance storage ref)"
                        }
                      },
                      "id": 500,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_policyInstanceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "894:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "876:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                        "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 502,
                          "name": "instanceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "943:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 503,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "972:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "972:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 501,
                        "name": "PolicyInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "915:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PolicyInstance_$457_storage_ptr_$",
                          "typeString": "type(struct PolicyFactory.PolicyInstance storage pointer)"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "915:77:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                        "typeString": "struct PolicyFactory.PolicyInstance memory"
                      }
                    },
                    "src": "876:116:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "876:116:3"
                },
                {
                  "body": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "1062:122:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "_policiesInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 461,
                                "src": "1136:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                                  "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance storage ref)"
                                }
                              },
                              "id": 531,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 530,
                                "name": "_policyInstanceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 463,
                                "src": "1154:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1136:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 521,
                                "name": "_multuaPoliciesInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "1076:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                                }
                              },
                              "id": 527,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 522,
                                      "name": "policyModel",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 474,
                                      "src": "1100:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                                        "typeString": "struct PolicyModel.PolicyModelStruct memory"
                                      }
                                    },
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mutual",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1311,
                                    "src": "1100:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Mutual_$1255_memory",
                                      "typeString": "struct MutualModel.Mutual memory"
                                    }
                                  },
                                  "id": 524,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wallets",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1254,
                                  "src": "1100:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 526,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 525,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 509,
                                  "src": "1127:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1100:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1076:54:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1076:59:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PolicyInstance_$457_storage_$returns$__$",
                              "typeString": "function (struct PolicyFactory.PolicyInstance storage ref)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1076:97:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "1076:97:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "1019:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "policyModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "1023:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                              "typeString": "struct PolicyModel.PolicyModelStruct memory"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mutual",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1311,
                          "src": "1023:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mutual_$1255_memory",
                            "typeString": "struct MutualModel.Mutual memory"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wallets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1254,
                        "src": "1023:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1023:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1019:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "initializationExpression": {
                    "assignments": [
                      509
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 509,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 535,
                        "src": "1007:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 511,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1007:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1058:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 518,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "1058:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 520,
                    "nodeType": "ExpressionStatement",
                    "src": "1058:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1003:181:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 537,
                        "name": "instanceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1215:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 536,
                      "name": "PolicyGenerated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "1199:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "EmitStatement",
                  "src": "1194:37:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0e779c43",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 477,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 476,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "673:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "673:13:3"
              },
              {
                "arguments": null,
                "id": 479,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 478,
                  "name": "onlyMutual",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 984,
                  "src": "695:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "695:10:3"
              }
            ],
            "name": "generatePolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "name": "policyModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 541,
                  "src": "615:36:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                    "typeString": "struct PolicyModel.PolicyModelStruct"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 473,
                    "name": "PolicyModelStruct",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1322,
                    "src": "615:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_storage_ptr",
                      "typeString": "struct PolicyModel.PolicyModelStruct"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:52:3"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:3"
            },
            "scope": 643,
            "src": "582:656:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "1414:736:3",
              "statements": [
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "name": "policyInstance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1424:38:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                        "typeString": "struct PolicyFactory.PolicyInstance[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 553,
                          "name": "PolicyInstance",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 457,
                          "src": "1424:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance"
                          }
                        },
                        "id": 554,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1424:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 559,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "_multuaPoliciesInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1465:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "multualAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "1489:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1465:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:80:3"
                },
                {
                  "assignments": [
                    563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 563,
                      "name": "policyInstanceMultua",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1514:44:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                        "typeString": "struct PolicyFactory.PolicyInstance[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 561,
                          "name": "PolicyInstance",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 457,
                          "src": "1514:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance"
                          }
                        },
                        "id": 562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1514:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 564,
                      "name": "_multuaPoliciesInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1561:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                      }
                    },
                    "id": 567,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 565,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1585:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1585:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1561:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:82:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 570,
                              "name": "policyInstanceMultua",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "1615:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1615:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1645:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1615:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 575,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1658:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1658:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 574,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "1650:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1650:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1615:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379466163746f72793a206d757374206265206d756c7475616c206f722041646d696e",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b469e37c3fe26df3e4317fde97e33aae0e489f1556e8d9e14583660e79f86c2",
                          "typeString": "literal_string \"PolicyFactory: must be multual or Admin\""
                        },
                        "value": "PolicyFactory: must be multual or Admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b469e37c3fe26df3e4317fde97e33aae0e489f1556e8d9e14583660e79f86c2",
                          "typeString": "literal_string \"PolicyFactory: must be multual or Admin\""
                        }
                      ],
                      "id": 569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1607:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:106:3"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "name": "instanceAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1724:34:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 585,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1724:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 593,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "policyInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "1775:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1775:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1761:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1765:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 588,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1765:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1724:73:3"
                },
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "name": "ownerAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1807:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1807:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 597,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1807:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 602,
                          "name": "policyInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "1855:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1855:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1841:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1845:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 600,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1845:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1807:70:3"
                },
                {
                  "body": {
                    "id": 635,
                    "nodeType": "Block",
                    "src": "1938:153:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "instanceAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "1952:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 619,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 618,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "1970:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1952:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 620,
                                "name": "policyInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 555,
                                "src": "1975:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                  "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                                }
                              },
                              "id": 622,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 621,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 607,
                                "src": "1990:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1975:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                                "typeString": "struct PolicyFactory.PolicyInstance memory"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instanceAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 454,
                            "src": "1975:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1952:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:56:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "ownerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "2022:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 628,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 627,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "2037:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2022:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "policyInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 555,
                                "src": "2042:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                  "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                                }
                              },
                              "id": 631,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 630,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 607,
                                "src": "2057:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2042:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                                "typeString": "struct PolicyFactory.PolicyInstance memory"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instanceAddressOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 456,
                            "src": "2042:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2022:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 634,
                        "nodeType": "ExpressionStatement",
                        "src": "2022:58:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "1907:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "policyInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "1911:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1911:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 636,
                  "initializationExpression": {
                    "assignments": [
                      607
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 607,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 636,
                        "src": "1892:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1892:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 609,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1904:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1892:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1934:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1934:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 616,
                    "nodeType": "ExpressionStatement",
                    "src": "1934:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1888:203:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "instanceAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2109:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "2128:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "id": 639,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2108:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,address[] memory)"
                    }
                  },
                  "functionReturnParameters": 551,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "2101:42:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3b2ce6da",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consultMutualPolicies",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "name": "multualAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1284:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1274:38:3"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "name": "policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1347:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1347:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1379:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 548,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1379:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1379:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1346:63:3"
            },
            "scope": 643,
            "src": "1244:906:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 644,
        "src": "151:2002:3"
      }
    ],
    "src": "0:2153:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/PolicyFactory.sol",
    "exportedSymbols": {
      "PolicyFactory": [
        643
      ]
    },
    "id": 644,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 444,
        "literals": [
          "solidity",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:3"
      },
      {
        "id": 445,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "23:33:3"
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/AbstractFactory.sol",
        "file": "./AbstractFactory.sol",
        "id": 446,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 23,
        "src": "58:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/policy/PolicyModel.sol",
        "file": "./policy/PolicyModel.sol",
        "id": 447,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 1324,
        "src": "91:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Files/Repo/hbtrust/hbtrust.policy.factory/contracts/Policy.sol",
        "file": "./Policy.sol",
        "id": 448,
        "nodeType": "ImportDirective",
        "scope": 644,
        "sourceUnit": 443,
        "src": "127:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 449,
              "name": "AbstractFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22,
              "src": "182:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFactory_$22",
                "typeString": "contract AbstractFactory"
              }
            },
            "id": 450,
            "nodeType": "InheritanceSpecifier",
            "src": "182:15:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 451,
              "name": "PolicyModel",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1323,
              "src": "204:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyModel_$1323",
                "typeString": "contract PolicyModel"
              }
            },
            "id": 452,
            "nodeType": "InheritanceSpecifier",
            "src": "204:11:3"
          }
        ],
        "contractDependencies": [
          22,
          442,
          953,
          1074,
          1155,
          1198,
          1221,
          1249,
          1256,
          1274,
          1288,
          1323,
          1353
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 643,
        "linearizedBaseContracts": [
          643,
          1323,
          1249,
          1353,
          1274,
          1288,
          1221,
          1256,
          22,
          1074,
          1155,
          953,
          1198
        ],
        "name": "PolicyFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyFactory.PolicyInstance",
            "id": 457,
            "members": [
              {
                "constant": false,
                "id": 454,
                "name": "instanceAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 457,
                "src": "254:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 453,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "254:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 456,
                "name": "instanceAddressOwner",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 457,
                "src": "287:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 455,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "287:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PolicyInstance",
            "nodeType": "StructDefinition",
            "scope": 643,
            "src": "222:100:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 461,
            "name": "_policiesInstance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "328:60:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
              "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance)"
            },
            "typeName": {
              "id": 460,
              "keyType": {
                "id": 458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "336:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "328:34:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance)"
              },
              "valueType": {
                "contractScope": null,
                "id": 459,
                "name": "PolicyInstance",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 457,
                "src": "347:14:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                  "typeString": "struct PolicyFactory.PolicyInstance"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 463,
            "name": "_policyInstanceId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "394:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 462,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 468,
            "name": "_multuaPoliciesInstance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 643,
            "src": "435:68:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct PolicyFactory.PolicyInstance[])"
            },
            "typeName": {
              "id": 467,
              "keyType": {
                "id": 464,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct PolicyFactory.PolicyInstance[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 465,
                  "name": "PolicyInstance",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 457,
                  "src": "454:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                    "typeString": "struct PolicyFactory.PolicyInstance"
                  }
                },
                "id": 466,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "454:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                  "typeString": "struct PolicyFactory.PolicyInstance[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 472,
            "name": "PolicyGenerated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "indexed": false,
                  "name": "instancecAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 472,
                  "src": "545:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "535:40:3"
            },
            "src": "514:62:3"
          },
          {
            "body": {
              "id": 540,
              "nodeType": "Block",
              "src": "710:528:3",
              "statements": [
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "name": "instance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 540,
                      "src": "720:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Policy_$442",
                        "typeString": "contract Policy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 481,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 442,
                        "src": "720:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 487,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "policyModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "762:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                          "typeString": "struct PolicyModel.PolicyModelStruct memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                          "typeString": "struct PolicyModel.PolicyModelStruct memory"
                        }
                      ],
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "738:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_struct$_PolicyModelStruct_$1322_memory_ptr_$returns$_t_contract$_Policy_$442_$",
                        "typeString": "function (struct PolicyModel.PolicyModelStruct memory) returns (contract Policy)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 483,
                        "name": "Policy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 442,
                        "src": "742:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      }
                    },
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "738:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$442",
                      "typeString": "contract Policy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "720:63:3"
                },
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "name": "instanceAddress",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 540,
                      "src": "794:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "794:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 492,
                        "name": "instance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "828:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Policy_$442",
                          "typeString": "contract Policy"
                        }
                      ],
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "820:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 490,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "820:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "794:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "847:19:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "_policyInstanceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 463,
                      "src": "847:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "847:19:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 498,
                        "name": "_policiesInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "876:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                          "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance storage ref)"
                        }
                      },
                      "id": 500,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 499,
                        "name": "_policyInstanceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 463,
                        "src": "894:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "876:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                        "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 502,
                          "name": "instanceAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 489,
                          "src": "943:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 503,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "972:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "972:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 501,
                        "name": "PolicyInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 457,
                        "src": "915:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PolicyInstance_$457_storage_ptr_$",
                          "typeString": "type(struct PolicyFactory.PolicyInstance storage pointer)"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "915:77:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                        "typeString": "struct PolicyFactory.PolicyInstance memory"
                      }
                    },
                    "src": "876:116:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "876:116:3"
                },
                {
                  "body": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "1062:122:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "_policiesInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 461,
                                "src": "1136:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PolicyInstance_$457_storage_$",
                                  "typeString": "mapping(uint256 => struct PolicyFactory.PolicyInstance storage ref)"
                                }
                              },
                              "id": 531,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 530,
                                "name": "_policyInstanceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 463,
                                "src": "1154:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1136:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 521,
                                "name": "_multuaPoliciesInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 468,
                                "src": "1076:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                                }
                              },
                              "id": 527,
                              "indexExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 522,
                                      "name": "policyModel",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 474,
                                      "src": "1100:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                                        "typeString": "struct PolicyModel.PolicyModelStruct memory"
                                      }
                                    },
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mutual",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1311,
                                    "src": "1100:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Mutual_$1255_memory",
                                      "typeString": "struct MutualModel.Mutual memory"
                                    }
                                  },
                                  "id": 524,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "wallets",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1254,
                                  "src": "1100:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 526,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 525,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 509,
                                  "src": "1127:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1100:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1076:54:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                                "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                              }
                            },
                            "id": 528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1076:59:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PolicyInstance_$457_storage_$returns$__$",
                              "typeString": "function (struct PolicyFactory.PolicyInstance storage ref)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1076:97:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "1076:97:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 512,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "1019:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "policyModel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "1023:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                              "typeString": "struct PolicyModel.PolicyModelStruct memory"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mutual",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1311,
                          "src": "1023:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Mutual_$1255_memory",
                            "typeString": "struct MutualModel.Mutual memory"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wallets",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1254,
                        "src": "1023:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1023:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1019:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 535,
                  "initializationExpression": {
                    "assignments": [
                      509
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 509,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 535,
                        "src": "1007:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1007:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 511,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1016:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1007:10:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1058:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 518,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "1058:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 520,
                    "nodeType": "ExpressionStatement",
                    "src": "1058:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1003:181:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 537,
                        "name": "instanceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "1215:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 536,
                      "name": "PolicyGenerated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 472,
                      "src": "1199:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1199:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "EmitStatement",
                  "src": "1194:37:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0e779c43",
            "id": 541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 477,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 476,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "673:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "673:13:3"
              },
              {
                "arguments": null,
                "id": 479,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 478,
                  "name": "onlyMutual",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 984,
                  "src": "695:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "695:10:3"
              }
            ],
            "name": "generatePolicy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "name": "policyModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 541,
                  "src": "615:36:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_memory_ptr",
                    "typeString": "struct PolicyModel.PolicyModelStruct"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 473,
                    "name": "PolicyModelStruct",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1322,
                    "src": "615:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PolicyModelStruct_$1322_storage_ptr",
                      "typeString": "struct PolicyModel.PolicyModelStruct"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "605:52:3"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:0:3"
            },
            "scope": 643,
            "src": "582:656:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 641,
              "nodeType": "Block",
              "src": "1414:736:3",
              "statements": [
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "name": "policyInstance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1424:38:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                        "typeString": "struct PolicyFactory.PolicyInstance[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 553,
                          "name": "PolicyInstance",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 457,
                          "src": "1424:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance"
                          }
                        },
                        "id": 554,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1424:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 559,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 556,
                      "name": "_multuaPoliciesInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1465:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                      }
                    },
                    "id": 558,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 557,
                      "name": "multualAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "1489:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1465:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1424:80:3"
                },
                {
                  "assignments": [
                    563
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 563,
                      "name": "policyInstanceMultua",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1514:44:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                        "typeString": "struct PolicyFactory.PolicyInstance[]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 561,
                          "name": "PolicyInstance",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 457,
                          "src": "1514:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PolicyInstance_$457_storage_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance"
                          }
                        },
                        "id": 562,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1514:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 564,
                      "name": "_multuaPoliciesInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 468,
                      "src": "1561:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct PolicyFactory.PolicyInstance storage ref[] storage ref)"
                      }
                    },
                    "id": 567,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 565,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1585:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1585:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1561:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_storage_$dyn_storage",
                      "typeString": "struct PolicyFactory.PolicyInstance storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1514:82:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 570,
                              "name": "policyInstanceMultua",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "1615:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                              }
                            },
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1615:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1645:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1615:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 575,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1658:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1658:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 574,
                            "name": "isAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "1650:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1650:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1615:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379466163746f72793a206d757374206265206d756c7475616c206f722041646d696e",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3b469e37c3fe26df3e4317fde97e33aae0e489f1556e8d9e14583660e79f86c2",
                          "typeString": "literal_string \"PolicyFactory: must be multual or Admin\""
                        },
                        "value": "PolicyFactory: must be multual or Admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3b469e37c3fe26df3e4317fde97e33aae0e489f1556e8d9e14583660e79f86c2",
                          "typeString": "literal_string \"PolicyFactory: must be multual or Admin\""
                        }
                      ],
                      "id": 569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1607:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:106:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:106:3"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "name": "instanceAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1724:34:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 585,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1724:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 593,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "policyInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "1775:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1775:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1761:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1765:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 588,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1765:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1761:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1724:73:3"
                },
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "name": "ownerAddresses",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 641,
                      "src": "1807:31:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 596,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1807:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 597,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1807:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 605,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 602,
                          "name": "policyInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "1855:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                            "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1855:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1841:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1845:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 600,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1845:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1807:70:3"
                },
                {
                  "body": {
                    "id": 635,
                    "nodeType": "Block",
                    "src": "1938:153:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 617,
                              "name": "instanceAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "1952:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 619,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 618,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "1970:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1952:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 620,
                                "name": "policyInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 555,
                                "src": "1975:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                  "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                                }
                              },
                              "id": 622,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 621,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 607,
                                "src": "1990:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1975:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                                "typeString": "struct PolicyFactory.PolicyInstance memory"
                              }
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instanceAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 454,
                            "src": "1975:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1952:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 625,
                        "nodeType": "ExpressionStatement",
                        "src": "1952:56:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "ownerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "2022:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 628,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 627,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "2037:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2022:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 629,
                                "name": "policyInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 555,
                                "src": "2042:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                                  "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                                }
                              },
                              "id": 631,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 630,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 607,
                                "src": "2057:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2042:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PolicyInstance_$457_memory",
                                "typeString": "struct PolicyFactory.PolicyInstance memory"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "instanceAddressOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 456,
                            "src": "2042:38:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2022:58:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 634,
                        "nodeType": "ExpressionStatement",
                        "src": "2022:58:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 610,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "1907:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "policyInstance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "1911:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PolicyInstance_$457_memory_$dyn_memory_ptr",
                          "typeString": "struct PolicyFactory.PolicyInstance memory[] memory"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1911:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1907:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 636,
                  "initializationExpression": {
                    "assignments": [
                      607
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 607,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 636,
                        "src": "1892:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1892:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 609,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1904:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1892:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1934:3:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1934:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 616,
                    "nodeType": "ExpressionStatement",
                    "src": "1934:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1888:203:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 637,
                        "name": "instanceAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2109:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "ownerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "2128:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "id": 639,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2108:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,address[] memory)"
                    }
                  },
                  "functionReturnParameters": 551,
                  "id": 640,
                  "nodeType": "Return",
                  "src": "2101:42:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3b2ce6da",
            "id": 642,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consultMutualPolicies",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "name": "multualAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1284:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1274:38:3"
            },
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "name": "policyAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1347:30:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 545,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1347:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 546,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1347:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 550,
                  "name": "ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 642,
                  "src": "1379:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 548,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1379:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 549,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1379:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1346:63:3"
            },
            "scope": 643,
            "src": "1244:906:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 644,
        "src": "151:2002:3"
      }
    ],
    "src": "0:2153:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-03-27T17:51:03.294Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}